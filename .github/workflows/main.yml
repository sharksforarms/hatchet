on: [push, pull_request]

name: CI

jobs:
  check:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install libpcap
        run: sudo apt-get -y install libpcap-dev
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --features pcap

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install libpcap
        run: sudo apt-get -y install libpcap-dev
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --features pcap

  test_miri:
    name: Miri Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: miri
      - name: Install libpcap
        run: sudo apt-get -y install libpcap-dev
      - run: cargo miri test --features pcap

  test_miri_big_endian:
    name: Miri Test Big Endian
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: miri
          target: mips64-unknown-linux-gnuabi64
      - name: Install libpcap
        run: sudo apt-get -y install libpcap-dev
      - run: cargo miri test --target mips64-unknown-linux-gnuabi64 --features pcap

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install libpcap
        run: sudo apt-get -y install libpcap-dev
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --features pcap -- -D warnings

  ensure_no_std:
    name: Ensure no_std
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - run: cd ensure_no_std && cargo run --release

  ensure_wasm:
    name: Ensure wasm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: 'latest'
      - run: cd ensure_wasm && wasm-pack build --target web && wasm-pack test --node

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install libpcap
        run: apt-get update && apt-get -y install libpcap-dev

      - name: Generate code coverage
        run: |
          cargo tarpaulin --verbose --features pcap --workspace --timeout 120 --out Xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
